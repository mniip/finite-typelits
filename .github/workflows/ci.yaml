name: CI

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
        ghc_version:
          - "8.0.2"
          - "8.2.2"
          - "8.4.4"
          - "8.6.5"
          - "8.8.4"
          - "8.10.7"
          - "9.0.2"
          - "9.2.8"
          - "9.4.8"
          - "9.6.6"
          - "9.8.2"
          - "9.10.1"
      fail-fast: false
    name: Build on Linux, GHC ${{ matrix.ghc_version }}
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: install ncurses5
        if: ${{ matrix.ghc_version < '8.3' }}
        run: |
          sudo apt-get update
          sudo apt-get -y install libncurses5 libtinfo5

      - uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc_version }}

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation ${{ matrix.ghc_version < '8.1' && '--disable-optimization' || '' }}
          cabal build all --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --enable-tests --enable-benchmarks --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v4
        # If we had an exact cache hit, trying to save the cache would error because of key clash.
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: cabal build
        run: cabal build --ghc-options=-Werror
      - name: cabal test
        run: cabal test
      - name: cabal check
        run: cabal check
      - name: cabal haddock
        run: cabal haddock
